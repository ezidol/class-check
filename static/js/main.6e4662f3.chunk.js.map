{"version":3,"sources":["hoc/Auxs.js","components/Class/Students/Student/Student.js","components/Class/Students/Students.js","components/Class/Note/Note.js","components/Class/Timer/Timer.js","components/Class/Header/Header.js","components/Class/Rank/Rank.js","components/Class/Class.js","container/App.js","serviceWorker.js","index.js"],"names":["aux","props","children","student","console","log","id","className","activeId","onClick","clicked","name","score","handlePlusScore","handleMinusScore","students","student_list","studentList","map","key","handleActiveId","length","slice","note","type","placeholder","value","activeNote","onChange","e","handleEditNote","Timer","state","sec","run","handleTimerRun","setState","setInterval","clock","this","Component","Header","timerShow","toggleTimerShow","toggleRankShow","rankShow","added","deleted","Rank","studentListSorted","sort","a","b","rankSorted","Set","element","i","forEach","r","x","studentListRank","filter","st","rank","index","Class","event","find","Number","target","handleAddStudent","handleDeleteStudent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6e4662f3.chunk.js","sourcesContent":["const aux =(props) => props.children;\n\nexport default aux;","import React from 'react';\nimport Aux from '../../../../hoc/Auxs';\nimport './Student.css';\n\nconst student = (props) => {\n    console.log(props.id);\n    \n    return (\n        <Aux>\n            <div className={props.id === props.activeId ? \"Student active\" : \"Student\"}\n            onClick={props.clicked}>\n                <div className=\"Name\"><h2>{props.name}</h2></div>\n                <div className=\"Score\"><h2>{props.score}</h2> </div>\n                \n                {props.id === props.activeId ? <div className=\"Button\">\n                    <button onClick={props.handlePlusScore}>+</button>\n                    <button onClick={props.handleMinusScore}>-</button>\n                </div> : null}\n                \n                \n            </div>\n        </Aux>\n        \n    )\n}\n\nexport default student;","import React from 'react';\nimport Student from './Student/Student';\nimport './Students.css';\n\nconst students = (props) => {\n    \n    const student_list = \n        props.studentList ? props.studentList.map(student => {\n        return <Student \n                key={student.id}\n                id={student.id}\n                name={student.name}\n                score={student.score}\n                activeId={props.activeId} \n                clicked={() => props.handleActiveId(student.id)}\n                handlePlusScore={props.handlePlusScore}\n                handleMinusScore={props.handleMinusScore} />\n    }) : null;\n\n    return (\n        <div className=\"Students\">\n            {student_list.length > 10 ? <div className=\"list\"><div className=\"list1\">{student_list.slice(0,10)}</div><div className=\"list2\">{student_list.slice(10,20)}</div></div>\n            : student_list}\n            \n        </div>\n    )\n}\n\nexport default students;","import React from 'react';\nimport './Note.css';\n\nconst note = (props) => {\n    return (\n        <div className=\"note\">\n            <h3>이름</h3>\n            <p><input type=\"text\" placeholder=\"이름을 적으세요\" value={props.activeNote.name} onChange={(e) => props.handleEditNote(e, \"name\")} /></p>\n            <h3>점수</h3>\n            <p><input type=\"number\" placeholder=\"점수를 적으세요\" value={props.activeNote.score} onChange={(e) => props.handleEditNote(e, \"score\")}/></p>\n            \n            \n        </div>\n    )\n}\n\nexport default note;","import React, { Component } from 'react';\nimport './Timer.css';\n\nclass Timer extends Component {\n\n    state = {\n        sec: 10,\n        run: false\n    }\n    componentDidMount () {\n        setInterval(() => {\n            if (this.state.run) {\n                this.setState({sec: this.state.sec - 1});\n                console.log(this.state.sec);\n            }\n            \n            if ( this.state.sec === 0) {\n                \n                this.setState(\n                    { run: false }\n                )\n            }\n        }, 1000);\n    }\n    handleTimerRun = () => {\n        this.setState({\n            run: !this.state.run,\n            sec: this.state.sec === 0 ? 10 : this.state.sec\n        })    \n    }\n    render() {\n        let clock = null;\n        if (this.state.sec === 10) {\n            clock = \"시작\";\n        } else if (this.state.sec === 0) {\n            clock = \"재시작\";\n        } else {\n            clock = \"중지\";\n        }\n        return (\n            <div className=\"timer\">\n                <div className=\"clock\">\n                    {this.state.sec === 0 ? <h2>마감!</h2> : <h2> {this.state.sec}초 </h2>}\n                     <button \n                    onClick={this.handleTimerRun}>{clock}</button>\n                </div>\n                \n            </div>\n        )\n    }\n    \n}\n\nexport default Timer;","import React from 'react';\nimport './Header.css';\nimport Timer from '../Timer/Timer';\n\nconst Header = (props) => {\n    return (\n        <div className=\"header\">\n            <div className=\"view-header\">\n                <p>신나는 수업시간</p>\n                {props.timerShow ? <Timer /> : null}\n                <div>\n                    <div className=\"button\">\n                        {/* <span className=\"onoff\">출석: {props.studentList.length}명</span> */}\n                        <span className=\"timer\">\n                            <button onClick={props.toggleTimerShow}>\n                                {props.timerShow ? <p>타이머 숨기기</p> : <p>타이머</p>}\n                            </button>\n                        </span>\n                        <span className=\"rank\">\n                            \n                            <button onClick={props.toggleRankShow}>\n                                {props.rankShow ? <p>순위숨기기</p> : <p>순위보기</p>}\n                            </button>\n                        </span>\n                        <span className=\"control\">\n                            <button onClick={props.added}><p>add</p></button>\n                            <button onClick={props.deleted}><p>delete</p></button>\n                        </span>\n                            \n                    </div>\n                </div>\n                \n            \n            </div>\n            <hr />\n        </div>\n        \n    );\n}\n\nexport default Header;","import React from 'react';\nimport './Rank.css';\n\nconst Rank = (props) => {\n    const { studentList } = props;\n    const newStudentList = [...studentList];\n    let studentListSorted = newStudentList.sort(\n        (a,b) => b[\"score\"]-a[\"score\"]\n    );\n    const rankSorted = [...new Set(studentListSorted.map(element => \n        element.score\n    ))];\n    console.log(rankSorted);\n    let i = 1;\n    rankSorted.forEach( r => {\n        \n        studentListSorted.forEach( x => {\n            if (x.score === r) {\n                x[\"rank\"] = i;\n            }\n        })\n        i++;\n        \n        }\n    );\n    studentListSorted = studentListSorted.filter(st => \n        st.rank < 4);\n    let studentListRank = studentListSorted.map( (st, index) => {\n        return (\n            <tr key={index}>\n                <td className=\"td-rank\">{st.rank}등</td>\n                <td>{st.name}</td>\n                <td className=\"td-score\">{st.score}</td>\n            </tr>\n        );\n    });\n    \n    console.log(studentListSorted);\n\n    return (\n        <div className=\"rank\">\n            <h3>랭킹</h3>\n            <table>\n                <thead>\n                    <tr>\n                        <th>순위</th>\n                        <th>이름</th>\n                        <th>점수</th>\n                    </tr>\n                    \n                </thead>\n                <tbody>\n                    {studentListRank}\n                </tbody>\n                \n                \n            </table>\n        </div>\n    )\n};\n\nexport default Rank;","import React, {Component} from 'react';\nimport Students from './Students/Students';\nimport Note from './Note/Note';\nimport Header from './Header/Header';\nimport Rank from './Rank/Rank';\nimport './Class.css';\n\nlet id = 1\nclass Class extends Component {\n    state = {\n        studentList: [\n            {\n                id: 1,\n                name: \"\",\n                score: 0\n            },\n            \n    \n        ],\n        activeId: id,\n        rankShow: false,\n        timerShow: false\n\n    }\n\n    toggleTimerShow = () => {\n        this.setState({\n            timerShow: !this.state.timerShow\n        })\n    }\n\n    toggleRankShow = () => {\n        this.setState({\n            rankShow: !this.state.rankShow\n        })\n    }\n\n    handleActiveId = (id) => {\n        this.setState({\n            activeId: id\n        })\n    }\n\n    handleEditNote = (event, type) => {\n        const studentList = [...this.state.studentList];\n        const activeStudent = studentList.find(student => \n            student.id === this.state.activeId);\n        activeStudent[type] = type === \"score\" ? Number(event.target.value) : event.target.value;\n        this.setState({\n            studentList\n        })\n    }\n\n    handleAddStudent = () => {\n        const studentList = [...this.state.studentList];\n        id++\n        this.setState({\n            studentList: [\n                ...studentList,\n                {\n                    id: id,\n                    name: '',\n                    score: 0\n                }\n            ],\n            activeId: id\n        })\n    }\n\n    handleDeleteStudent = (id) => {\n        let studentList = [...this.state.studentList];\n        studentList = studentList.filter(student => \n            student.id !== this.state.activeId\n        )\n        this.setState({\n            studentList,\n            activeId: studentList.length === 0 ? null : studentList[0].id\n        })\n    }\n    \n    handlePlusScore = () => {\n        const studentList = [...this.state.studentList];\n        const activeStudent = studentList.find(student => \n            student.id === this.state.activeId);\n        activeStudent.score += 1;\n        this.setState({\n            studentList\n        })\n    }\n\n    handleMinusScore = () => {\n        const studentList = [...this.state.studentList];\n        const activeStudent = studentList.find(student => \n            student.id === this.state.activeId);\n        activeStudent.score -= 1;\n        this.setState({\n            studentList\n        })\n    }\n\n    render() {\n        console.log(this.state);\n        const activeNote = this.state.studentList.find(student => \n        student.id === this.state.activeId    \n        )\n        console.log(activeNote)\n        return(\n            <div className=\"Class\">\n                <div className=\"Header\">\n                    <Header \n                    added={()=>this.handleAddStudent()} \n                    deleted={()=>this.handleDeleteStudent(this.state.activeId)} \n                    rankShow={this.state.rankShow}\n                    toggleRankShow={this.toggleRankShow}\n                    toggleTimerShow={this.toggleTimerShow}\n                    timerShow={this.state.timerShow}\n                    studentList={this.state.studentList} \n                    />\n                </div>\n                <div className=\"main\">\n                    <Students\n                    studentList={this.state.studentList}\n                    handleActiveId={this.handleActiveId}\n                    handlePlusScore={this.handlePlusScore}\n                    handleMinusScore={this.handleMinusScore}\n                    activeId={this.state.activeId} />\n                    <div className=\"right-main\">\n                        <div className=\"note-view\">\n                            {this.state.studentList.length === 0 ? \n                            null : <Note \n                            activeNote={activeNote} \n                            handleEditNote={this.handleEditNote}\n                            \n                             />}\n                        </div>\n                        <div className=\"rank-view\">\n                            {this.state.rankShow ? \n                            <Rank \n                            studentList={this.state.studentList} /> :\n                            null}\n                        </div>\n                        \n                    </div>           \n                        \n                </div>\n                \n                \n            </div>\n        )\n            \n    }\n}\n\n\n\nexport default Class;","import React from 'react';\nimport Class from '../components/Class/Class';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Class />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}