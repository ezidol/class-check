{"version":3,"sources":["hoc/Auxs.js","components/Class/Students/Student/Student.js","components/Class/Students/Students.js","components/Class/Note/Note.js","components/Class/Timer/Timer.js","components/Class/Header/Header.js","components/Class/Rank/Rank.js","components/Class/Class.js","container/App.js","serviceWorker.js","index.js"],"names":["aux","props","children","student","console","log","id","className","activeId","onClick","clicked","name","score","handlePlusScore","handleMinusScore","students","student_list10","student_list","studentList","map","key","handleActiveId","slice","length","note","type","placeholder","value","activeNote","onChange","e","handleEditNote","Timer","state","sec","run","handleTimerRun","setState","setInterval","clock","this","Component","Header","useState","title","setTitle","input","setInput","inputButtonName","setInputButtonName","titleComponent","target","handleEditTitle","timerShow","toggleTimerShow","toggleRankShow","rankShow","added","deleted","Rank","studentListSorted","sort","a","b","rankSorted","Set","element","i","forEach","r","x","studentListRank","filter","st","rank","index","Class","event","find","Number","handleAddStudent","handleDeleteStudent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fbf0d0dc.chunk.js","sourcesContent":["const aux =(props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport Aux from '../../../../hoc/Auxs';\r\nimport './Student.css';\r\n\r\nconst student = (props) => {\r\n    console.log(props.id);\r\n    \r\n    return (\r\n        <Aux>\r\n            <div className={props.id === props.activeId ? \"Student active\" : \"Student\"}\r\n            onClick={props.clicked}>\r\n                <div className=\"Name\"><h2>{props.name}</h2></div>\r\n                <div className=\"Score\"><h2>{props.score}</h2> </div>\r\n                \r\n                {props.id === props.activeId ? <div className=\"Button\">\r\n                    <button onClick={props.handlePlusScore}>+</button>\r\n                    <button onClick={props.handleMinusScore}>-</button>\r\n                </div> : null}\r\n                \r\n                \r\n            </div>\r\n        </Aux>\r\n        \r\n    )\r\n}\r\n\r\nexport default student;","import React from 'react';\r\nimport Student from './Student/Student';\r\nimport './Students.css';\r\n\r\nconst students = (props) => {\r\n    \r\n    let student_list = \r\n        props.studentList ? props.studentList.map(student => {\r\n        return <Student \r\n                key={student.id}\r\n                id={student.id}\r\n                name={student.name}\r\n                score={student.score}\r\n                activeId={props.activeId} \r\n                clicked={() => props.handleActiveId(student.id)}\r\n                handlePlusScore={props.handlePlusScore}\r\n                handleMinusScore={props.handleMinusScore} />\r\n        }) : null;\r\n    const max_students = 30;\r\n    student_list = student_list.slice(0, max_students);\r\n    let student_list10;\r\n    if (student_list.length > 10 && student_list.length <= 20) {\r\n        student_list10 = <div className=\"list\"><div className=\"list1\">{student_list.slice(0,10)}</div><div className=\"list2\">{student_list.slice(10,20)}</div></div>;\r\n    } else if (student_list.length > 20) {\r\n        student_list10 = <div className=\"list\"><div className=\"list1\">{student_list.slice(0,10)}</div><div className=\"list2\">{student_list.slice(10,20)}</div><div className=\"list3\">{student_list.slice(20,30)}</div></div>;\r\n    } else (\r\n        student_list10 = student_list\r\n    )\r\n\r\n    return (\r\n        <div className=\"Students\">\r\n            {student_list10}            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default students;\r\n","import React from 'react';\r\nimport './Note.css';\r\n\r\nconst note = (props) => {\r\n    return (\r\n        <div className=\"note\">\r\n            <h3>이름</h3>\r\n            <p><input type=\"text\" placeholder=\"이름을 적으세요\" value={props.activeNote.name} onChange={(e) => props.handleEditNote(e, \"name\")} /></p>\r\n            <h3>점수</h3>\r\n            <p><input type=\"number\" placeholder=\"점수를 적으세요\" value={props.activeNote.score} onChange={(e) => props.handleEditNote(e, \"score\")}/></p>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default note;","import React, { Component } from 'react';\r\nimport './Timer.css';\r\n\r\nclass Timer extends Component {\r\n\r\n    state = {\r\n        sec: 10,\r\n        run: false\r\n    }\r\n    componentDidMount () {\r\n        setInterval(() => {\r\n            if (this.state.run) {\r\n                this.setState({sec: this.state.sec - 1});\r\n                console.log(this.state.sec);\r\n            }\r\n            \r\n            if ( this.state.sec === 0) {\r\n                \r\n                this.setState(\r\n                    { run: false }\r\n                )\r\n            }\r\n        }, 1000);\r\n    }\r\n    handleTimerRun = () => {\r\n        this.setState({\r\n            run: !this.state.run,\r\n            sec: this.state.sec === 0 ? 10 : this.state.sec\r\n        })    \r\n    }\r\n    render() {\r\n        let clock = null;\r\n        if (this.state.sec === 10) {\r\n            clock = \"시작\";\r\n        } else if (this.state.sec === 0) {\r\n            clock = \"재시작\";\r\n        } else {\r\n            clock = \"중지\";\r\n        }\r\n        return (\r\n            <div className=\"timer\">\r\n                <div className=\"clock\">\r\n                    {this.state.sec === 0 ? <h2>마감!</h2> : <h2> {this.state.sec}초 </h2>}\r\n                     <button \r\n                    onClick={this.handleTimerRun}>{clock}</button>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Timer;","import React, {useState} from 'react';\r\nimport './Header.css';\r\nimport Timer from '../Timer/Timer';\r\n\r\nconst Header = (props) => {\r\n    const [title, setTitle] = useState('');\r\n    const [input, setInput] = useState(true);\r\n    const [inputButtonName, setInputButtonName] = useState('입력');\r\n    let titleComponent = '';\r\n    const handleEditTitle = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n    const handleInputButton = () => {\r\n        if (input) {\r\n            setInput(false);\r\n            setInputButtonName('수정');\r\n        } else {\r\n            setInput(true);\r\n            setInputButtonName('입력');\r\n        }\r\n        \r\n    }\r\n    if (input) {\r\n        titleComponent = <input type=\"text\" placeholder=\"주제를 적으세요\" value={title} onChange={(e) => handleEditTitle(e)} />\r\n    } else {\r\n        titleComponent = title;\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"view-header\">\r\n                <div className=\"title-view\">\r\n                    {titleComponent}\r\n                    <span className=\"input-button\">\r\n                        <button onClick={() => handleInputButton()}>{inputButtonName}</button>\r\n                    </span>\r\n                    \r\n                </div>\r\n                {props.timerShow ? <Timer /> : null}\r\n                <div>\r\n                    <div className=\"button\">\r\n                        {/* <span className=\"onoff\">출석: {props.studentList.length}명</span> */}\r\n                        <span className=\"timer\">\r\n                            <button onClick={props.toggleTimerShow}>\r\n                                {props.timerShow ? <p>타이머 숨기기</p> : <p>타이머</p>}\r\n                            </button>\r\n                        </span>\r\n                        <span className=\"rank\">\r\n                            \r\n                            <button onClick={props.toggleRankShow}>\r\n                                {props.rankShow ? <p>순위숨기기</p> : <p>순위보기</p>}\r\n                            </button>\r\n                        </span>\r\n                        <span className=\"control\">\r\n                            <button onClick={props.added}><p>add</p></button>\r\n                            <button onClick={props.deleted}><p>delete</p></button>\r\n                        </span>\r\n                            \r\n                    </div>\r\n                </div>\r\n                \r\n            \r\n            </div>\r\n            <hr />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Rank.css';\r\n\r\nconst Rank = (props) => {\r\n    const { studentList } = props;\r\n    const newStudentList = [...studentList];\r\n    let studentListSorted = newStudentList.sort(\r\n        (a,b) => b[\"score\"]-a[\"score\"]\r\n    );\r\n    const rankSorted = [...new Set(studentListSorted.map(element => \r\n        element.score\r\n    ))];\r\n    console.log(rankSorted);\r\n    let i = 1;\r\n    rankSorted.forEach( r => {\r\n        \r\n        studentListSorted.forEach( x => {\r\n            if (x.score === r) {\r\n                x[\"rank\"] = i;\r\n            }\r\n        })\r\n        i++;\r\n        \r\n        }\r\n    );\r\n    studentListSorted = studentListSorted.filter(st => \r\n        st.rank < 4);\r\n    let studentListRank = studentListSorted.map( (st, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td className=\"td-rank\">{st.rank}등</td>\r\n                <td>{st.name}</td>\r\n                <td className=\"td-score\">{st.score}</td>\r\n            </tr>\r\n        );\r\n    });\r\n    \r\n    console.log(studentListSorted);\r\n\r\n    return (\r\n        <div className=\"rank\">\r\n            <h3>랭킹</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>순위</th>\r\n                        <th>이름</th>\r\n                        <th>점수</th>\r\n                    </tr>\r\n                    \r\n                </thead>\r\n                <tbody>\r\n                    {studentListRank}\r\n                </tbody>\r\n                \r\n                \r\n            </table>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Rank;","import React, {Component} from 'react';\r\nimport Students from './Students/Students';\r\nimport Note from './Note/Note';\r\nimport Header from './Header/Header';\r\nimport Rank from './Rank/Rank';\r\nimport './Class.css';\r\n\r\nlet id = 1\r\nclass Class extends Component {\r\n    state = {\r\n        studentList: [\r\n            {\r\n                id: 1,\r\n                name: \"\",\r\n                score: 0\r\n            },\r\n            \r\n    \r\n        ],\r\n        activeId: id,\r\n        rankShow: false,\r\n        timerShow: false\r\n\r\n    }\r\n\r\n    toggleTimerShow = () => {\r\n        this.setState({\r\n            timerShow: !this.state.timerShow\r\n        })\r\n    }\r\n\r\n    toggleRankShow = () => {\r\n        this.setState({\r\n            rankShow: !this.state.rankShow\r\n        })\r\n    }\r\n\r\n    handleActiveId = (id) => {\r\n        this.setState({\r\n            activeId: id\r\n        })\r\n    }\r\n\r\n    handleEditNote = (event, type) => {\r\n        const studentList = [...this.state.studentList];\r\n        const activeStudent = studentList.find(student => \r\n            student.id === this.state.activeId);\r\n        activeStudent[type] = type === \"score\" ? Number(event.target.value) : event.target.value;\r\n        this.setState({\r\n            studentList\r\n        })\r\n    }\r\n\r\n    handleAddStudent = () => {\r\n        if (this.state.studentList.length == 30) {\r\n            return 0;\r\n        }\r\n        const studentList = [...this.state.studentList];\r\n        id++\r\n        this.setState({\r\n            studentList: [\r\n                ...studentList,\r\n                {\r\n                    id: id,\r\n                    name: '',\r\n                    score: 0\r\n                }\r\n            ],\r\n            activeId: id\r\n        })\r\n    }\r\n\r\n    handleDeleteStudent = (id) => {\r\n        let studentList = [...this.state.studentList];\r\n        studentList = studentList.filter(student => \r\n            student.id !== this.state.activeId\r\n        )\r\n        this.setState({\r\n            studentList,\r\n            activeId: studentList.length === 0 ? null : studentList[0].id\r\n        })\r\n    }\r\n    \r\n    handlePlusScore = () => {\r\n        const studentList = [...this.state.studentList];\r\n        const activeStudent = studentList.find(student => \r\n            student.id === this.state.activeId);\r\n        activeStudent.score += 1;\r\n        this.setState({\r\n            studentList\r\n        })\r\n    }\r\n\r\n    handleMinusScore = () => {\r\n        const studentList = [...this.state.studentList];\r\n        const activeStudent = studentList.find(student => \r\n            student.id === this.state.activeId);\r\n        activeStudent.score -= 1;\r\n        this.setState({\r\n            studentList\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        const activeNote = this.state.studentList.find(student => \r\n        student.id === this.state.activeId    \r\n        )\r\n        console.log(activeNote)\r\n        return(\r\n            <div className=\"Class\">\r\n                <div className=\"Header\">\r\n                    <Header \r\n                    added={()=>this.handleAddStudent()} \r\n                    deleted={()=>this.handleDeleteStudent(this.state.activeId)} \r\n                    rankShow={this.state.rankShow}\r\n                    toggleRankShow={this.toggleRankShow}\r\n                    toggleTimerShow={this.toggleTimerShow}\r\n                    timerShow={this.state.timerShow}\r\n                    studentList={this.state.studentList} \r\n                    />\r\n                </div>\r\n                <div className=\"main\">\r\n                    <Students\r\n                    studentList={this.state.studentList}\r\n                    handleActiveId={this.handleActiveId}\r\n                    handlePlusScore={this.handlePlusScore}\r\n                    handleMinusScore={this.handleMinusScore}\r\n                    activeId={this.state.activeId} />\r\n                    <div className=\"right-main\">\r\n                        <div className=\"note-view\">\r\n                            {this.state.studentList.length === 0 ? \r\n                            null : <Note \r\n                            activeNote={activeNote} \r\n                            handleEditNote={this.handleEditNote}\r\n                            \r\n                             />}\r\n                        </div>\r\n                        <div className=\"rank-view\">\r\n                            {this.state.rankShow ? \r\n                            <Rank \r\n                            studentList={this.state.studentList} /> :\r\n                            null}\r\n                        </div>\r\n                        \r\n                    </div>           \r\n                        \r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n            \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Class;","import React from 'react';\r\nimport Class from '../components/Class/Class';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Class />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './container/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}